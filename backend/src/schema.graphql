type Query {
  userLogin(userAccount: String, userPassword: String): User
  initUserTodo(_id: ID): Todo
  initUserEvent(_id: ID): DashboardEvent
  initMember(_id: ID): [User]!
  initScore(_id: ID): [Contest]!
  initGallery(_id: ID): [Gallery]!
  initGantt(_id: ID): [Gantt]!
  ##### Yoga #####
  users(query: String): [User]!
  initTeam(_id:ID): [Team]!
  #initTeamEvent(_id: ID): [Event]!
  #initTeamPost(_id: ID): [Post]!
  #initVote(_id: ID) [Vote]!
  ################
}

type Mutation {
  createUser(userAccount: String, userPassword: String, userEmail: String): User
  createUserTodo(_id: ID, todoContent: String): Todo
  createScore(data: CreateScoreInput!): Contest!
  createScoreDetail(data: CreateScoreDetailInput!): Contest!
  createGallery(data: CreateGalleryInput!): Gallery!
  createGantt(data: CreateGanttInput!): Gantt!
  ##### Yoga #####
  createTeam(
    teamName: String!, 
    teamDescription: String!, 
    teamType: String!,
    creater: String! # ** 修正= > User?
  ): Team!
  createTeamEvent(
    eventTitle: String!, 
    eventDescription: String!, 
    eventStart: String!, 
    eventEnd: String, 
    eventLocation: String, 
    team: String!
    creater: String!
  ): Event!
  createTeamPost(
    postTitle: String!,
    postContent: String!,
    team: String!
    creater: String!
  ): Post
  createVote(
    voteTitle: String!
    voteDescription: String!
    voteEnd: String!
    voteLimit: Int
    team: String!
    creater: String!
  ): Vote
  createVoteOption(
    voteOptionName: String!
    team: String!
  ): VoteOption
  ################
}

type Subscription {
  testSubscription: String
}

type User {
  userID: ID!
  userAccount: String!
  userPassword: String!
  userEmail: String!
  userName: String
  userBirthday: Int
  userStatus: String
  userProfile: String
  allTeams: [Team]!
  userTodo: [Todo]!
  # userNotification: [DashboardNotification]!
  # userEvent: [DashboardEvent]!
  # userTodo: [Todo!]!
  # userPlaySet: [UserPlaySet]!
  # userAchievement: [Achievement]!
}

type Todo {
  todoID: ID!
  todoStatus: String!
  todoContent: String!
}

type DashboardNotification {
  notificationDDL: Int!
  notificationTask: [NotificationTask]!
}

type NotificationTask {
  taskType: String!
  taskContent: String!
}

type DashboardEvent {
  eventID: ID!
  eventTitle: String!
  eventDescription: String
  eventStart: Int!
  eventEnd: Int!
  eventLocation: String
  eventPosttime: Int!
}

type UserPlaySet {
  userPlaySetID: ID!
  playSetUser: User!
  scoreDetail: [Int!]!
}

type userAchievement {
  userAchievementID: ID!
  userAchievementTitle: String!
  userAchievementContent: String!
}

type Team {
  teamID: ID!
  teamName: String!
  teamDescription: String!
  teamType: String!
  #teamCreateDate: String # 修正
  teamMember: [User!]!
  teamGallery: [Gallery]!
  teamPost: [Post]!
  teamGantt: [Gantt]!
  teamScore: [Contest]!
  teamVote: [Vote]!
  teamEvent: [Event]!
}

type Gallery {
  galleryID: ID!
  galleryTitle: String!
  original_url: [String!]!
  thumbnail_url: [String!]!
}

type Post {
  postID: ID!
  postTitle: String!
  postContent: String!
  postAuthor: User!
  postTime: String!
}

type Gantt {
  ganttID: ID!
  ganttTitle: String!
  ganttTaskID: [GanttTask]!
}

type GanttTask {
  ganttTaskID: ID!
  dateStart: Int!
  dateEnd: Int!
  duration: Int!
  percComplete: Float!
  dependencies: String!
}

type Contest {
  contestID: ID!
  contestTitle: String!
  contestMyTeam: Team!
  contestDate: Int!
  contestOpponent: Team!
  contestIsWin: Boolean!
  contestScoreSet: [ContestScoreSet!]
  contestScoreItem: [String!]
}

type ContestScoreSet {
  contestScoreID: ID!
  myTeamScore: Int!
  opponentScore: Int!
  userPlaySet: [UserPlaySet!]
}

type Vote {
  voteID: ID!
  voteTitle: String!
  voteDescription: String!
  voteEnd: String!
  voteLimit: Int
  voteCreator: User!
  voteOption: [VoteOption]!
}

type VoteOption {
  voteOptionID: ID!
  voteOptionName: String!
  votedUser: [User]!
}

type Event {
  eventID: ID!
  eventTitle: String!
  eventDescription: String!
  eventStart: String!
  eventEnd: String
  eventLocation: String
  eventCreator: User
  eventPosttime: String!
}

input CreateScoreInput {
  contestDate: Int!
  contestOpponent: ID!
  contestIsWin: Boolean!
}

input CreateScoreDetailInput {
  contestScoreSet: ID!
  contestScoreItem: [String!]!
}

input CreateGalleryInput {
  galleryTitle: String!
}

input CreateGanttInput {
  ganttTitle: String!
  ganttTask: ID!
}
