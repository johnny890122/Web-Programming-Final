type Query {
  userLogin(account:String, password: String): User
  initUserTodo(_id: ID): Todo
  initUserEvent(_id: ID): DashboardEvent
}

type Mutation {
  createUser(userAccount: String, userPassword: String, userEmail: String): User
  createUserTodo(_id: ID, todoContent: String): Todo
}

type Subscription {
  testSubscription: String
}

type User {
  userID: ID!
  userAccount: String!
  userPassword: String!
  userEmail: String!
  userName: String
  userBirthday: Int
  userStatus: String
  userProfile: String
  # allTeams: [Team]!
  userTodo: [Todo]!
  # userNotification: [DashboardNotification]!
  # userEvent: [DashboardEvent]!
  # userTodo: [Todo!]!
  # userPlaySet: [UserPlaySet]!
  # userAchievement: [Achievement]!
}

type Todo {
  todoID: ID!
  todoStatus: String!
  todoContent: String!
}

type DashboardNotification {
  notificationDDL: Int!
  notificationTask: [NotificationTask]!
}

type NotificationTask {
  taskType: String!
  taskContent: String!
}

type DashboardEvent {
  eventID: ID!
  eventTitle: String!
  eventDescription: String
  eventStart: Int!
  eventEnd: Int!
  eventLocation: String
  eventPosttime: Int!
}

type UserPlaySet {
  userPlaySetID: ID!
  playSetUser: User!
  scoreDetail: [Int!]!
}

type userAchievement {
  userAchievementID: ID!
  userAchievementTitle: String!
  userAchievementContent: String!
}
